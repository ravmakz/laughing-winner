% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/bootstraping.R
\name{diversity_ci}
\alias{diversity_ci}
\title{Perform bootstrap statistics, calculate and plot confidence intervals.}
\usage{
diversity_ci(tab, n = 1000, ci = 95, total = TRUE, rarefy = FALSE,
  mlg.weight = TRUE, plot = TRUE, raw = TRUE, ...)
}
\arguments{
\item{tab}{a genind object OR a matrix produced from
\code{\link[poppr]{mlg.table}}.}

\item{n}{an integer defining the number of bootstrap replicates (defaults to
1000).}

\item{ci}{the percent for confidence interval.}

\item{total}{argument to be passed on to \code{\link[poppr]{mlg.table}} if
\code{tab} is a genind object.}

\item{rarefy}{if \code{TRUE}, bootstrapping will be performed on the smallest
population size. Defaults to \code{FALSE}, indicating that bootstrapping
will be performed respective to each population size.}

\item{mlg.weight}{when \code{FALSE} (default), all observed MLGs have an
equal chance of being selected in the bootstrapping procedure. When
\code{TRUE}, larger MLGs have more of a chance of being selected. This
parameter is ignored when \code{rarefy = TRUE}.}

\item{plot}{If \code{TRUE} (default), boxplots will be produced for each
population, grouped by statistic. Colored dots will indicate the observed
value.This plot can be retrieved by using \code{p <- last_plot()} from the
\pkg{ggplot2} package.}

\item{raw}{if \code{TRUE} (default) a list containing three elements will be
returned}

\item{...}{parameters to be passed on to \code{\link[boot]{boot}} and
  \code{\link{diversity_stats}}}
}
\value{
\subsection{raw = TRUE}{
\itemize{
\item \strong{obs} - a matrix with observed statistics in columns, populations in rows
\item \strong{est} - a matrix with estimated statistics in columns, populations in rows
\item \strong{CI} - an array of 3 dimensions giving the lower and upper bound, the index
  measured, and the population.
  }
 }
\subsection{raw = FALSE}{ a data frame with the statistic observations,
estimates, and confidence intervals in columns, and populations in rows. Note
that the confidence intervals are converted to characters and rounded to
three decimal places. }
}
\description{
Perform bootstrap statistics, calculate and plot confidence intervals.
}
\note{
While it is possible to use custom functions with this, there are three
  important things to remember when using these functions:
\enumerate{
\item The function must return a single value.
\item The function must allow for both matrix and vector inputs
\item The function name cannot match or partially match any arguments from
\code{\link[boot]{boot}}
} Anonymous functions are okay \cr(e.g. \code{function(x) vegan::rarefy(x, 10)}).
\subsection{Confidence Intervals}{The estimates from the bootstrapping
procedure are often biased due to the nature of the data. Calculating a
confidence interval utilizes the function \code{\link[boot]{boot.ci}}, which
will attempt to correct for bias when calculating the CI, but it will not
always be centered around the mean and can occasionally fall outside of the
possible range of values (i.e. a lambda value > 1). If you want to calculate
the CI yourself, you may use the function \code{\link{diversity_boot}} to create the
bootstrap statistics for each population.}
}
\examples{
library(poppr)
data(Pinf)
diversity_ci(Pinf, n = 100L)
\dontrun{
# With pretty results
diversity_ci(Pinf, n = 100L, raw = FALSE)

# This can be done in a parallel fasion (OSX uses "multicore", Windows uses "snow")
system.time(diversity_ci(Pinf, 10000L, parallel = "multicore", ncpus = 4L))
system.time(diversity_ci(Pinf, 10000L))

# The previous version of poppr contained a statistic known as Hexp, which
# was caluclated as (n/(n - 1))*lambda. It basically looks like an unbiased
# Simpson's index. This statistic was originally included in poppr because it
# was originally included in the program multilocus. Since the reference for
# this was hard to track down. Because of this, it was removed from analysis.

Hexp <- function(x){
 lambda <- vegan::diversity(x, "simpson")
 x <- drop(as.matrix(x))
 if (length(dim(x)) > 1){
   N <- rowSums(x)
 } else {
   N <- sum(x)
 }
 return((N/(N-1))*lambda)
}
# Show pretty results
diversity_ci(Pinf, 1000L, Hexp = Hexp, raw = FALSE)
diversity_ci(Pinf, 1000L, Hexp = Hexp, rarefy = TRUE, raw = FALSE)
}
}
\author{
Zhian N. Kamvar
}
\seealso{
\code{\link{diversity_boot}} \code{\link{diversity_stats}} \code{\link{poppr}}
}

