% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/bootstraping.R
\name{get_stats}
\alias{get_stats}
\title{Produce a table of diversity statistics}
\usage{
get_stats(z, H = TRUE, G = TRUE, lambda = TRUE, E5 = TRUE, ...)
}
\arguments{
\item{z}{a table of integers representing counts of MLGs (columns) per
  population (rows)}

\item{H}{logical whether or not to calculate Shannon's index}

\item{G}{logical whether or not to calculate Stoddart and Taylor's index}

\item{lambda}{logical whether or not to calculate Simpson's index}

\item{E5}{logical whether or not to calculate Evenness}

\item{...}{any functions that can be calculated on a vector or matrix of
  genotype counts.}
}
\value{
a numeric matrix giving statistics (columns) for each population
  (rows).
}
\description{
Produce a table of diversity statistics
}
\examples{
library(poppr)
data(Pinf)
tab <- mlg.table(Pinf, plot = FALSE)
get_stats(tab)
\dontrun{
# Example using the poweRlaw package to calculate the negative slope of the
# Pareto distribution.

library("poweRlaw")
power_law_beta <- function(x){
  xpow <- displ(x[x > 0])                 # Generate the distribution
  xpow$setPars(estimate_pars(xpow))       # Estimate the parameters
  xdat <- plot(xpow, draw = FALSE)        # Extract the data
  xlm <- lm(log(y) ~ log(x), data = xdat) # Run log-log linear model for slope
  return(-coef(xlm)[2])
}

Beta <- function(x){
  x <- drop(as.matrix(x))
  if (length(dim(x)) > 1){
    res <- apply(x, 1, power_law_beta)
  } else {
    res <- power_law_beta(x)
  }
  return(res)
}

get_stats(tab, B = Beta)
}
}
\author{
Zhian N. Kamvar
}
\seealso{
\code{\link{do_boot}} \code{\link{diversity_stats}} \code{\link{poppr}}
}

